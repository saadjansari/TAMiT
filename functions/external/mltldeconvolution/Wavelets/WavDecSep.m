function [xs_hat, xw_hat] = WavDecSep(xs_hat, htld_hat, gtld_hat, decimation)
% [xs_hat, xw_hat] = WavDecSep(x_hat, htld_hat, gtld_hat, decimation)
%
% Frequency-domain implementation of a separable wavelet decomposition.
% In particular:
% - the input signal must be specified in the DFT domain;
% - the function returns the DFTs of the wavelet coefficients in each subband.
%
% x_hat:      DFT of the signal to be decomposed.
% htld_hat,
% gtld_hat:   DFTs of the (scaling-function and wavelet) analysis filters,
%             as generated by the BiorthWavFiltersSep() routine.
% decimation: True or false.
%
% xs_hat:     DFT of the coarsest-scale scaling coefficients.
% xw_hat:     DFTs of the wavelet coefficients (two-level cell array
%             corresponding to every scale and every wavelet subband).
%
% (c) Cedric Vonesch, Biomedical Imaging Group, EPFL, 2006.11.06-2009.04.16

% Decomposition depth
J = size(htld_hat, 1);

% Wavelet-subband allocation
xw_hat = cell(J, 1);

% Take the complex conjugates of the filters because we are on the analysis side
htldstr_hat = cellfuncell(@conj, htld_hat);
gtldstr_hat = cellfuncell(@conj, gtld_hat);

% Decomposition
for j = 1:J
	[xs_hat, xw_hat{j}] = WavAnalysisSep(xs_hat, htldstr_hat(j, :), gtldstr_hat(j, :), decimation);
end